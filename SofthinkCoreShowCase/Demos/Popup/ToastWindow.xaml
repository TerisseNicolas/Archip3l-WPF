<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SofthinkCoreShowCase.Demos.Popup"
    xmlns:i="http://schemas.microsoft.com/expression/2010/"
    xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:it="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:ut="clr-namespace:SofthinkCore.Utils.Bindings;assembly=SofthinkCore"
    xmlns:ui="http://SofthinkCore/UI">
    
    <Style TargetType="{x:Type local:ToastWindow}" BasedOn="{StaticResource {x:Type ui:UbiWindow}}" >
        <Setter Property="WindowStyle" Value="None" />
        
        <Style.Triggers>
            <Trigger Property="WindowStyle" Value="None" >
            <Setter Property="Template">
                <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type local:ToastWindow}">
                            <ControlTemplate.Resources>
                                <ut:OperationConverter x:Key="divide" Number="2" Operation="Divide" />
                                <Storyboard x:Key="ToastAnim"  >
                                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.5" >
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="scale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.5" >
                                        <DoubleAnimation.EasingFunction>
                                            <ElasticEase/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation From="0" To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5"/>                                   
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5"/>

                                    <!--<it:Interaction.Triggers>
                                        <it:EventTrigger EventName="Completed">
                                            <ie:CallMethodAction MethodName="Hide" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </it:EventTrigger>
                                    </it:Interaction.Triggers>-->
                                </Storyboard >
                            </ControlTemplate.Resources>
                            <Grid>
                                <Border CornerRadius="15" Background="DarkGray"  Padding="30" x:Name="border">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="scale" CenterX="{Binding ElementName=border,Path=ActualWidth,Converter={StaticResource divide}}" 
                                                        CenterY="{Binding ElementName=border,Path=ActualHeight,Converter={StaticResource divide}}" />
                                    </Border.RenderTransform>
                                    <TextBlock Text="{TemplateBinding Message}" FontSize="60" Foreground="White" VerticalAlignment="Center"  TextAlignment="Center" HorizontalAlignment="Center" />
                                </Border>

                                

                                <!--<it:Interaction.Triggers>
                                    <ie:StoryboardCompletedTrigger Storyboard="{StaticResource ToastAnim}">
                                        <ie:CallMethodAction MethodName="Hide" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ie:StoryboardCompletedTrigger>
                                </it:Interaction.Triggers>-->

                            </Grid>

                            <!--<ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded" >
                                    <BeginStoryboard Storyboard="{StaticResource ToastAnim}" />
                                </EventTrigger>
                            </ControlTemplate.Triggers>-->

                            

                        </ControlTemplate>
                    </Setter.Value>
            </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>

