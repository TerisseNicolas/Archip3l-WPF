<UserControl x:Class="SofthinkCoreShowCase.Demos.DragDrop.DragDropHitTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:g="http://SofthinkCore/Gesture"
             xmlns:dd="clr-namespace:SofthinkCore.UI.DragDrop;assembly=SofthinkCore"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
             xmlns:uib="clr-namespace:SofthinkCore.UI.Base;assembly=SofthinkCore"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="{x:Type TextBlock}" >
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="20" />
        </Style>
        <Style TargetType="Rectangle" x:Key="recstyle">
            <Style.Triggers>
                <Trigger  Property="dd:DragAndDrop.TargetStatus" Value="None">
                    <Setter Property="Stroke" Value="DodgerBlue" />
                    <Setter Property="Fill" Value="Transparent"/>
                </Trigger>
                <Trigger   Property="dd:DragAndDrop.TargetStatus" Value="Hoovered">
                    <Setter  Property="Stroke" Value="Green" />
                    <Setter Property="Fill" Value="LightGreen" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Wheat">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <TextBlock Background="Orange" Width="300" Height="300"  Text="Point HitTest" Grid.Column="0" >
            <g:Gesture.Collection>
                <g:DragProcessor AllowMultipleInstance="True"/>
             </g:Gesture.Collection>

            <dd:DragAndDrop.DragDropParameters>
                <dd:DragDropParameters  StartEvent="g:DragProcessor.DragStart">
                    <dd:DragDropParameters.Template>
                        <DataTemplate>
                            <Rectangle Fill="Orange" Width="300" Height="300" Opacity="0.5"/>
                        </DataTemplate>
                    </dd:DragDropParameters.Template>
                </dd:DragDropParameters>
            </dd:DragAndDrop.DragDropParameters>
        </TextBlock>
        <TextBlock Background="Orange" Width="300" Height="300"  Text="Feedback HitTest" Grid.Column="1" >
            <g:Gesture.Collection>
                <g:DragProcessor AllowMultipleInstance="True"/>
             </g:Gesture.Collection>

            <dd:DragAndDrop.DragDropParameters>
                <dd:DragDropParameters  HitTest="Feedback" StartEvent="g:DragProcessor.DragStart">
                    <dd:DragDropParameters.Template>
                        <DataTemplate>
                            <Rectangle Fill="Orange" Width="300" Height="300" Opacity="0.5"/>
                        </DataTemplate>
                    </dd:DragDropParameters.Template>
                </dd:DragDropParameters>
            </dd:DragAndDrop.DragDropParameters>
        </TextBlock>
        <TextBlock Background="Orange" Width="300" Height="300"  Text="Geometry HitTest" Grid.Column="2" >
            <g:Gesture.Collection>
                <g:DragProcessor AllowMultipleInstance="True"/>
             </g:Gesture.Collection>

            <dd:DragAndDrop.DragDropParameters>
                <dd:DragDropParameters StartEvent="g:DragProcessor.DragStart" HitTest="CustomGeometry" > 
                    <dd:DragDropParameters.Template>
                        <DataTemplate>
                            <Rectangle Fill="Orange" Width="300" Height="300" Opacity="0.5" StrokeThickness="5"/>
                        </DataTemplate>
                    </dd:DragDropParameters.Template>
                </dd:DragDropParameters>
            </dd:DragAndDrop.DragDropParameters>
        </TextBlock>
        
        <Rectangle Name="targetdrop"  Stroke="DodgerBlue" Fill="Transparent" dd:DragAndDrop.AllowDrop="True" dd:DragAndDrop.CanDrop="targetdrop_CanDrop"
                   StrokeThickness="15" RadiusX="30" RadiusY="30" 
                   Grid.Row="1" Grid.Column="0"   Style="{StaticResource recstyle}" Margin="100">
            <i:Interaction.Triggers>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop, Path=(dd:DragAndDrop.TargetStatus)}" Value="Hoovered" >
                    <ic:ChangePropertyAction TargetName="targetdrop"  PropertyName="Fill" Value="LightGreen"  />                
                </ic:DataTrigger>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop, Path=(dd:DragAndDrop.TargetStatus)}" Value="None" >
                    <ic:ChangePropertyAction TargetName="targetdrop"  PropertyName="Fill" Value="Transparent"  />
                </ic:DataTrigger>
            </i:Interaction.Triggers>          
        </Rectangle>

        <Rectangle x:Name="targetdrop2"   Stroke="DodgerBlue" Fill="Transparent" dd:DragAndDrop.AllowDrop="True" dd:DragAndDrop.CanDrop="targetdrop_CanDrop"
                   StrokeThickness="15" RadiusX="30" RadiusY="30" 
                   Grid.Row="1"  Grid.Column="1"  Style="{StaticResource recstyle}" Margin="100" >
            <i:Interaction.Triggers>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop2, Path=(dd:DragAndDrop.TargetStatus)}" Value="Hoovered" >
                    <ic:ChangePropertyAction  PropertyName="Fill" Value="LightGreen"  />
                </ic:DataTrigger>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop2, Path=(dd:DragAndDrop.TargetStatus)}" Value="None" >
                    <ic:ChangePropertyAction   PropertyName="Fill" Value="Transparent"  />
                </ic:DataTrigger>
            </i:Interaction.Triggers>
        </Rectangle>

        <Rectangle x:Name="targetdrop3"   Stroke="DodgerBlue" Fill="Transparent" dd:DragAndDrop.AllowDrop="True" dd:DragAndDrop.CanDrop="targetdrop_CanDrop"
                   StrokeThickness="15" RadiusX="30" RadiusY="30" Margin="100"
                   Grid.Row="1"  Grid.Column="2"  Style="{StaticResource recstyle}" >
            <i:Interaction.Triggers>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop3, Path=(dd:DragAndDrop.TargetStatus)}" Value="Hoovered" >
                    <ic:ChangePropertyAction  PropertyName="Fill" Value="LightGreen"  />
                </ic:DataTrigger>
                <ic:DataTrigger Binding="{Binding ElementName=targetdrop3, Path=(dd:DragAndDrop.TargetStatus)}" Value="None" >
                    <ic:ChangePropertyAction   PropertyName="Fill" Value="Transparent"  />
                </ic:DataTrigger>
            </i:Interaction.Triggers>
        </Rectangle>

    </Grid>
    
   
</UserControl>
