<UserControl x:Class="SofthinkCoreShowCase.Demos.GestureMVVM.GestureMVVMControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cmc="clr-namespace:DemoCommon.Controls"
             xmlns:uib="clr-namespace:SofthinkCore.UI.Base;assembly=SofthinkCore"
             xmlns:bh="clr-namespace:SofthinkCore.UI.Base.BehaviorUtils;assembly=SofthinkCore"
             xmlns:g="clr-namespace:SofthinkCore.Gestures;assembly=SofthinkCore"
             xmlns:gp="clr-namespace:SofthinkCore.Gestures.Processor;assembly=SofthinkCore"
             xmlns:local="clr-namespace:SofthinkCoreShowCase.Demos.GestureMVVM"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <TextBlock Background="LightGray" Margin="10" Padding="15" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Long Tap To Add Postit" Panel.ZIndex="1" FontSize="20" IsHitTestVisible="False"/>
        <ItemsControl ItemsSource="{Binding Postits}">


            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas x:Name="canvas" Background="AliceBlue"    > <!--:TapProcessor.TapBubble="{uib:RoutedEventCommandExtension {Binding Postits.CreatePostitCommand}}" >-->
                        <Canvas.Resources>
                            <!-- convert HoldEventArgs to a Point taking into account the size of a postit to make the point directly consomable by ViewModel-->
                            <local:HoldConverter x:Key="holdConv" VisualReference="{Binding ElementName=canvas}"/>
                        </Canvas.Resources>
                        
                        <uib:CommandCollection.CommandCollection>
                            <uib:CommandSource uib:CommandCollection.Event="gp:TapProcessor.TapBubble" Command="{Binding Postits.CreatePostitCommand}" Converter="{StaticResource holdConv}" />
                        </uib:CommandCollection.CommandCollection>
                        
                        <g:Gesture.Collection>
                            <gp:HoldProcessor AllowMultipleInstance="True" CatchChildEvent="False"/>
                            <gp:TapProcessor/>
                        </g:Gesture.Collection>

                        <i:Interaction.Triggers>
                            <uib:RoutedEventTrigger Event="gp:HoldProcessor.HoldBubble" >
                                <uib:CommandAction Command="{Binding Postits.CreatePostitCommand}" Converter="{StaticResource holdConv}"  />
                            </uib:RoutedEventTrigger>
                        </i:Interaction.Triggers>
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>


            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                    <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                    <Setter Property="bh:InteractivityAsRessource.Behaviors">
                        <Setter.Value>
                            <bh:Behaviors>
                                <bh:DragOnCanvasBehavior/>
                            </bh:Behaviors>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <cmc:Postit  Text="{Binding Text}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>



        </ItemsControl>
    </Grid>
</UserControl>
